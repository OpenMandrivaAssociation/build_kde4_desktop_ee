timezone Europe/Moscow
auth --useshadow --enablemd5
selinux --disabled
firewall --enabled
firstboot --enabled
part / --size 8692

services --enabled=acpid,alsa,atd,avahi-daemon,prefdm,haldaemon,irqbalance,mandi,dbus,netfs,network,network-up,partmon,resolvconf,rpcbind,rsyslog,sound,udev-post,cups,mandrake_everytime,crond
services --disabled=sshd,pptp,pppoe,ntpd,iptables,ip6tables,shorewall,nfs-server,network,network-up,mysqld,abrtd,mysql,postfix

repo --name=Main_LTS       --baseurl=http://abf.rosalinux.ru/downloads/rosa2012lts/repository/#ARCH#/main/release

repo --name=Non-Free_LTS       --baseurl=http://abf.rosalinux.ru/downloads/rosa2012lts/repository/#ARCH#/non-free/release

repo --name=Restricted	--baseurl=http://mirror.yandex.ru/mandriva/official/restricted/2011.0/#ARCH#/

# for 32bit stuff on 64bits arch
#repo --name=Main32_LTS       --baseurl=http://abf.rosalinux.ru/downloads/rosa2012lts/repository/i586/main/release

%packages
%include #PATH#/#ARCH#kde.lst
%end

%post

#echo "ROSA Marathon 2012" > /etc/redhat-release                                                                                                                                                             
#echo "ROSA Marathon 2012" > /etc/issue                                                                                                                                                                      
#echo "ROSA Marathon 2012" > /etc/issue.net                                                                                                                                                                  
#echo "ROSA Marathon 2012" > /etc/system-release  
#echo "ROSA Marathon 2012" > /etc/os-release
sed -i 's!MandrivaLinux!ROSALinux!g' /etc/lsb-release
sed -i 's!Mandriva!ROSA Marathon!g' /etc/lsb-release
sed -i 's!2011.0!2012!g' /etc/lsb-release                                                                                                                                                            
                                                      
# adding messagebus user to workaround rpm ordering (eugeni)
/usr/share/rpm-helper/add-user dbus 1 messagebus / /sbin/nologin
/usr/share/rpm-helper/add-group dbus 1 messagebus

/bin/chown root:messagebus /lib*/dbus-1/dbus-daemon-launch-helper
/bin/chmod u+s,g-s /lib*/dbus-1/dbus-daemon-launch-helper

####### avahi workaround                                                                                        
/usr/share/rpm-helper/add-user avahi 1 avahi /var/avahi /bin/false                                              
/usr/share/rpm-helper/add-user avahi 1 avahi-autoipd /var/avahi /bin/false                                      
/usr/share/rpm-helper/add-service avahi 1 avahi-daemon                                                          
#### end of it


echo "----->"
/bin/ls -l /boot/
echo "----------->"
echo "###################################### Make initrd symlink >> "
echo ""

/usr/sbin/update-alternatives --set mkinitrd /usr/sbin/mkinitrd-dracut
rm -rf /boot/initrd-*

echo "----------------->"

# adding life user
/usr/sbin/adduser live
/usr/bin/passwd -d live
/bin/mkdir -p /home/live
/bin/cp -rfT /etc/skel /home/live/
/bin/chown -R live:live /home/live
# usermod -a -G cdrom live
# enable live user autologin
if [ -f /usr/share/config/kdm/kdmrc ]; then
	/bin/sed -i -e 's/.*AutoLoginEnable.*/AutoLoginEnable=true/g' -e 's/.*AutoLoginUser.*/AutoLoginUser=live/g' /usr/share/config/kdm/kdmrc
fi

# ldetect stuff
/usr/sbin/update-ldetect-lst

# setting up network manager by default
# don't forget to change it

pushd /etc/sysconfig/network-scripts
for iface in eth0 wlan0; do
	cat > ifcfg-$iface << EOF
DEVICE=$iface
ONBOOT=yes
NM_CONTROLLED=yes
EOF
done
popd

systemctl enable NetworkManager.service
systemctl enable getty@.service


# default background
pushd /usr/share/mdk/backgrounds/
ln -s rosa-background.jpg default.jpg 
popd 

# mtab
pushd /etc/
ln -sf /proc/mounts mtab
popd

#####workaround for time###                                                                                                                                                                                        
rm -rf /etc/sysconfig/clock                                                                                                                                                                                        
rm -rf /etc/adjtime                                                                                                                                                                                                
rm -rf /etc/localtime                                                                                                                                                                                              
##### 
###chkconfig###                                                                                                                                                                                                    
/sbin/chkconfig --add checkflashboot                                                                                                                                                                               
#####       

#Change samba groupe to WORKGROUP
sed -i 's/MDVGROUP/WORKGROUP/' /etc/samba/smb.conf

#All file in /etc/modprobe.d need .conf in tail
mv /etc/modprobe.d/snd-oss /etc/modprobe.d/snd-oss.conf

#
# DKMS
#

echo
echo
echo Rebuilding DKMS drivers
echo
echo

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

#build arch import for vboxadditions dkms + flash workaround###

export BUILD_TARGET_ARCH=x86
XXX=`file /bin/rpm |grep -c x86-64`                                                                                                                                                                                
if [ "$XXX" = "1" ];  then  
export BUILD_TARGET_ARCH=amd64
fi

echo " ###DKMS BUILD### "                                                                                                                                                                                          
kernel_ver=`ls /boot | /bin/grep vmlinuz | /bin/sed 's/vmlinuz-//'`   
for module in broadcom-wl vboxadditions r8192se; do                                                                                                                              
module_version=`rpm --qf '%{VERSION}\n' -q dkms-$module`                                                                                                                                                           
module_release=`rpm --qf '%{RELEASE}\n' -q dkms-$module`                                                                                                                                                           
/usr/sbin/dkms -k $kernel_ver -a #ARCH# --rpm_safe_upgrade add -m $module -v $module_version-$module_release
/usr/sbin/dkms -k $kernel_ver -a #ARCH# --rpm_safe_upgrade build -m $module -v $module_version-$module_release                                                                                  
/usr/sbin/dkms -k $kernel_ver -a #ARCH# --rpm_safe_upgrade install -m $module -v $module_version-$module_release --force                                                                        
done                                                                                                                                                                                                               
echo "END OF IT" 
#/bin/bash
#
# kernel
#

#
# Sysfs must be mounted for dracut to work!
#
mount -t sysfs /sys /sys

pushd /lib/modules/
KERNEL=$(echo *)
popd
echo
echo Generating kernel. System kernel is `uname -r`, installed kernels are:
rpm -qa kernel-*
echo Detected kernel version: $KERNEL

/usr/sbin/dracut --add-drivers "sr-mod xhci-hcd" /boot/initramfs-$KERNEL.img $KERNEL
mkdir -p /run/initramfs/live/isolinux/
ln -s /boot/initramfs-$KERNEL.img /run/initramfs/live/isolinux/initrd0.img
#cp -f /boot/initramfs-$KERNEL.img /run/initramfs/live/isolinux/initrd0.img
ls -l /boot/

#hack for nscd loop error
while (ps -e | grep nscd)
do
  killall -s 9 nscd
done

echo ""
echo "###################################### Build ISO >> "
echo ""

%post --nochroot
#hack to try to stop umount probs
while (#PATH#/lsof /dev/loop* | grep -v "$0" | grep "$INSTALL_ROOT")
do
 sleep 5s
done

   cp -rfT 	#PATH#/extraconfig/etc $INSTALL_ROOT/etc/
    cp -rfT 	#PATH#/extraconfig/usr $INSTALL_ROOT/usr/    
    cp -rfT 	#PATH#/extraconfig/var $INSTALL_ROOT/var/    
    cp -rfT 	#PATH#/extraconfig/var $INSTALL_ROOT/root/
    cp -rfT     #PATH#/extraconfig/etc/skel $INSTALL_ROOT/home/live/
    chown -R 500:500 $INSTALL_ROOT/home/live/
    chmod -R 0777 $INSTALL_ROOT/home/live/.local
    chmod -R 0777 $INSTALL_ROOT/home/live/.kde4
	#delete icon cache
    rm -f $INSTALL_ROOT/usr/share/icons/gnome/icon-theme.cache
    rm -f $INSTALL_ROOT/usr/share/icons/nuoveXT2/icon-theme.cache
    rm -f $INSTALL_ROOT/home/live/.face.icon

    cp -rfT     #PATH#/.counter $INSTALL_ROOT/etc/isonumber 

    cp -f 		#PATH#/root/GPL $LIVE_ROOT/
#    mkdir -p 	$LIVE_ROOT/Addons
#    cp 	  		/usr/bin/livecd-iso-to-disk			$LIVE_ROOT/Addons/
#    chmod +x 	$LIVE_ROOT/Addons/livecd-iso-to-disk
    rpm --root $INSTALL_ROOT -qa | sort > $LIVE_ROOT/rpm.lst
    ./total_sum_counter.pl -r 640 -h 10 -w $INSTALL_ROOT/ -o $INSTALL_ROOT/etc/minsysreqs

%post --afterall
echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
echo -lR $LIVE_ROOT
###memtest###
    cp #PATH#/extraconfig/memtest $LIVE_ROOT/isolinux/
    echo "label memtest" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  menu label Run Memtest" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  kernel memtest" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  append -" >> $LIVE_ROOT/isolinux/isolinux.cfg
### add local boot ####
    echo "label localboot" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  menu label Boot from hard disk" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  localboot 0x80" >> $LIVE_ROOT/isolinux/isolinux.cfg
### add rescue #####
    cp #PATH#/extraconfig/memdisk $LIVE_ROOT/isolinux/
    cp #PATH#/extraconfig/sgb.img $LIVE_ROOT/isolinux/
    echo "label rescue" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  menu label Rescue system" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  kernel memdisk" >> $LIVE_ROOT/isolinux/isolinux.cfg
    echo "  append initrd=sgb.img" >> $LIVE_ROOT/isolinux/isolinux.cfg
###  md5sum check#
   cp -rfT #PATH#/extraconfig/check/ /$LIVE_ROOT/isolinux/
   sed -i -e '/  menu label Check Disk/{ N; s/vmlinuz0/vmlinuz1/ }' $LIVE_ROOT/isolinux/isolinux.cfg
   sed -i -e '/ kernel vmlinuz1/{ N; s/initrd0.img/initrd1.img/ }' $LIVE_ROOT/isolinux/isolinux.cfg
   cd /$LIVE_ROOT
   find -type f -print | xargs md5sum >> /md5.dat
   sed -i '/isolinux.bin/d' /md5.dat
   mv /md5.dat $LIVE_ROOT/
%end
